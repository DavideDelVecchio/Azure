{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "dnsNamePrefix": {
      "type": "string"
    },
    "region": {
      "type": "string"
    },
    "scriptsUri": {
      "type": "string"
    },
    "storageAccount": {
      "type": "object"
    },
    "vmCount": {
      "type": "int"
    },
    "vmSpec": {
      "type": "object"
    },
    "networkSpec": {
      "type": "object"
    },
    "clusterSpec": {
        "type": "object"
    },
    "adSpec": {
      "type": "object"
    }
  },
  "variables": {
    "vmName": "[concat(parameters('dnsNamePrefix'), '-mn')]",
    "nicName": "[concat(variables('vmName'), '-nic')]",
    "storageAccountName": "[concat('nn', parameters('storageAccount').prefix)]",
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat(variables('storageAccountName'), copyIndex())]",
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('region')]",
      "copy": {
        "name": "storageAccountLoop",
        "count": "[parameters('vmCount')]"
      },
      "properties": {
        "accountType": "[parameters('storageAccount').type]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('nicName'), copyIndex())]",
      "location": "[parameters('region')]",
      "dependsOn": [
      ],
      "copy": {
        "name": "masterNodeNicLoop",
        "count": "[parameters('vmCount')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[concat(parameters('networkSpec').privateIPPrefix, copyIndex(parameters('networkSpec').masterNodeAddressStart))]",
              "subnet": {
                "id": "[concat(resourceId(parameters('networkSpec').vnetResourceGroup, 'Microsoft.Network/virtualNetworks', parameters('networkSpec').virtualNetworkName), '/subnets/', parameters('networkSpec').virtualNetworkSubnetName)]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('vmName'), copyIndex())]",
      "plan": {
        "name": "cloudera-centos-6",
        "publisher": "cloudera",
        "product": "cloudera-centos-6"
      },
      "location": "[parameters('region')]",
      "copy": {
        "name": "masterNodeNicLoop",
        "count": "[parameters('vmCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), copyIndex())]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'), copyIndex())]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('vmSpec').masterNodeASName)]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSpec').vmSize]"
        },
        "osProfile": {
          "computername": "[concat(variables('vmName'), copyIndex(), '.', parameters('adSpec').adDomainName)]",
          "adminUsername": "[parameters('vmSpec').adminUserName]",
          "adminPassword": "[parameters('vmSpec').adminPassword]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "false"
          }
        },
        "storageProfile": {
          "imageReference":
          {
            "publisher": "cloudera",
            "offer": "cloudera-centos-6",
            "sku": "CLOUDERA-CENTOS-6",
            "version": "1.0.0"
          },
          "osDisk":
          {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://', variables('storageAccountName'), copyIndex(), '.blob.core.windows.net/vhds/', variables('vmName'), copyIndex(), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "datadisk0",
              "diskSizeGB": "512",
              "lun": 0,
              "vhd": {
                "Uri": "[concat('http://', variables('storageAccountName'), copyIndex(), '.blob.core.windows.net/vhds0/', variables('vmName'), '-datadisk0.vhd')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk1",
              "diskSizeGB": "512",
              "lun": 1,
              "vhd": {
                "Uri": "[concat('http://', variables('storageAccountName'), copyIndex(), '.blob.core.windows.net/vhds1/', variables('vmName'), '-datadisk1.vhd')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk2",
              "diskSizeGB": "512",
              "lun": 2,
              "vhd": {
                "Uri": "[concat('http://', variables('storageAccountName'), copyIndex(), '.blob.core.windows.net/vhds2/', variables('vmName'), '-datadisk2.vhd')]"
              },
              "createOption": "Empty"
            },
            {
              "name": "datadisk3",
              "diskSizeGB": "512",
              "lun": 3,
              "vhd": {
                "Uri": "[concat('http://', variables('storageAccountName'), copyIndex(), '.blob.core.windows.net/vhds3/', variables('vmName'), '-datadisk3.vhd')]"
              },
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('nicName'), copyIndex()))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'), copyIndex(), '/prepareDisks')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('region')]",
      "copy": {
        "name": "nameNodeNicLoop",
        "count": "[parameters('vmCount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'), copyIndex())]"
      ],
      "properties": {
        "publisher": "Microsoft.OSTCExtensions",
        "type": "CustomScriptForLinux",
        "typeHandlerVersion": "1.2",
        "settings": {
          "fileUris": [
            "[concat(parameters('scriptsUri'), '/config/krb5.conf')]",
            "[concat(parameters('scriptsUri'), '/config/smb.conf')]",
            "[concat(parameters('scriptsUri'), '/config/sssd.conf')]",
            "[concat(parameters('scriptsUri'), '/config/ntp.conf')]",
            "[concat(parameters('scriptsUri'), '/config/resolv.conf')]",
            "[concat(parameters('scriptsUri'), '/scripts/prepare-masternode-disks.sh')]",
            "[concat(parameters('scriptsUri'), '/scripts/initialize-node.sh')]"
          ],
          "commandToExecute": "[concat('sh initialize-node.sh \"', parameters('networkSpec').privateIPPrefix, '\" \"', parameters('dnsNamePrefix'), '\" \"', parameters('adSpec').adDomainName, '\" \"', parameters('adSpec').PDC, '\" \"', parameters('adSpec').BDC, '\" \"', parameters('adSpec').PDCIP, '\" \"', parameters('adSpec').BDCIP, '\" ', parameters('clusterSpec').masterNodeCount, ' ', parameters('clusterSpec').dataNodeCount, ' \"', parameters('vmSpec').adminUserName, '\" ', 'masternode', ' >> /home/$ADMINUSER/initialize-masternode.log 2>&1')]"
        }
      }
    }
  ]
}
